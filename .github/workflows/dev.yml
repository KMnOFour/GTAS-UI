name: GTAS UI pipeline workflow
on:
  push:
jobs:
  build:
    name: gui
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: actions/checkout@master
        name: Checkout latest code
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Clean resources
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: delete deployments gtas-ui
      - uses: docker/build-push-action@v2
        name: Build and push GTAS UI
        with:
          repository: wcogtas/gtas-ui
          context: .
          platforms: linux/amd64
          push: true
          file: ./dockerfile
          tags: wcogtas/gtas-ui:dev
      - name: Generate Kubernetes deployment configuration file
        shell: bash
        env:
          REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }}
        run: |
          sudo apt-get -y update
          sudo apt-get install -y curl
          curl -L https://github.com/kubernetes/kompose/releases/download/v1.21.0/kompose-linux-amd64 -o kompose
          chmod +x kompose
          sudo mv ./kompose /usr/local/bin/kompose
          kompose -f docker-compose.yml -f k8s-pipeline-properties.yml convert --out deploy.yaml
      - name: Deploy to cluster
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f deploy.yaml